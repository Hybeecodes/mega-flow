'use strict';

const url = require('url');
const co = require('co');
const mongo = require('mongodb');

exports.extend = function(app) {
  app.response.paginate = paginate;
  app.use(links);
}

var links = (req, res, next) => {
  res.locals.url = {
    protocol: req.protocol,
    host: req.get('host'),
    pathname: req.path,
    query : req.query
  };
  next()
}

var paginate = co.wrap(function*(cursor, options) {
  const msg = 'paginate requires an Mongo.Cursor but got an '; 

  if (!(cursor instanceof mongo.Cursor))
    throw new TypeError(msg + typeof body);

  let prev, next, query = this.locals.url.query;
  let start = query.start || 0;
  let limit = query.limit || options && options.limit || 25;

  if (options && options.limit && limit > options.limit)
    return this.status(400).json({ error: 'bad query' });
    

  start = parseInt(start);
  limit = parseInt(limit);

  const count = yield cursor.count()
  const items = yield cursor.skip(start).limit(limit).toArray()

  if (start === 0) {
    prev = null;
  } else {
    prev = this.locals.url;
    prev.query = { 
      start : Math.max(start - limit, 0), 
      limit
    }
    prev = url.format(prev);
  }

  if (start + limit >= count) {
    next = null;
  } else {
    next = this.locals.url;
    next.query = { 
      start : start + limit, 
      limit
    }
    next = url.format(next);
  }

  this.json({ items, prev, next });
});    


