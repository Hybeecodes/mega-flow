// Copyright 2015, 2016 Mark Cornick
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

'use strict';

var defaultPool = function defaultPool(length) {
  var alphabet = 'ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789';
  var repeats = parseInt((length - 1) / alphabet.length, 10) + 1;
  var pool = [];
  for (var i = 1; i <= repeats; i++) {
    pool = pool.concat(alphabet.split(''));
  }
  return pool;
};

var randomCharacter = function randomCharacter(pool) {
  var index = Math.floor(Math.random() * pool.length);
  var character = pool[index];
  pool.splice(index, 1);
  return character;
};

var acceptable = function acceptable(pw) {
  return pw.match(/[A-Z]/) && pw.match(/[a-z]/) && pw.match(/\d/);
};

var generatePassword = function generatePassword(pool, length) {
  var results = [];
  for (var i = 1; i <= length; i++) {
    results.push(randomCharacter(pool));
  }
  return results.join('');
};

module.exports = function (length) {
  if (typeof length === 'undefined') {
    length = 16;
  }
  if (length < 3) {
    throw new Error('Cannot generate password of length ' + length);
  } else {
    var password = '';
    while (!acceptable(password)) {
      var currentPool = defaultPool(length);
      password = generatePassword(currentPool, length);
    }
    return password;
  }
};